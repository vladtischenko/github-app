{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vlad/apps/github-app/src/LoginForm/index.js\";\nimport React from 'react';\nimport { Button, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            alert(_JSON$stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, function (_ref2) {\n        var values = _ref2.values,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            handleSubmit = _ref2.handleSubmit,\n            isSubmitting = _ref2.isSubmitting;\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Label, {\n          \"for\": \"exampleEmail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Email\"), React.createElement(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"exampleEmail\",\n          placeholder: \"with a placeholder\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), errors.email && touched.email && errors.email), React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Label, {\n          \"for\": \"examplePassword\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Password\"), React.createElement(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"examplePassword\",\n          placeholder: \"password placeholder\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), errors.password && touched.password && errors.password), React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Submit\"));\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component); // import React from 'react';\n// import { Formik, Field, ErrorMessage, Form as FForm } from 'formik';\n// import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n// const Basic = () => (\n//   <div>\n//     <h1>Any place in your app!</h1>\n//     <Formik\n//       initialValues={{ email: '', password: '' }}\n//       validate={values => {\n//         let errors = {};\n//         if (!values.email) {\n//           errors.email = 'Required';\n//         } else if (\n//           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n//         ) {\n//           errors.email = 'Invalid email address';\n//         }\n//         if (!values.password) {\n//           errors.password = 'Required';\n//         }\n//         return errors;\n//       }}\n//       onSubmit={(values, { setSubmitting }) => {\n//         setTimeout(() => {\n//           alert(JSON.stringify(values, null, 2));\n//           setSubmitting(false);\n//         }, 400);\n//       }}\n//     >\n//       {({ isSubmitting }) => (\n//         <FForm>\n//           <FormGroup>\n//             <Label for=\"email\">Email</Label>\n//             <Field type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n//             <ErrorMessage name=\"email\" component=\"div\" />\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"email\">Password</Label>\n//             <Field type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n//             <ErrorMessage name=\"password\" component=\"div\" />\n//           </FormGroup>\n//           <button type=\"submit\" disabled={isSubmitting}>\n//             Submit\n//           </button>\n//         </FForm>\n//       )}\n//     </Formik>\n//   </div>\n// );\n// export default Basic;\n\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/vlad/apps/github-app/src/LoginForm/index.js"],"names":["React","Button","FormGroup","Label","Input","FormText","Formik","Form","Field","ErrorMessage","Example","email","password","values","errors","test","setSubmitting","setTimeout","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>Login</h2>\n\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validate={values => {\n            let errors = {};\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = 'Invalid email address';\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"with a placeholder\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                />\n                {errors.email && touched.email && errors.email}\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"examplePassword\"\n                  placeholder=\"password placeholder\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                {errors.password && touched.password && errors.password}\n              </FormGroup>\n              <Button>Submit</Button>\n            </Form>\n          )}\n        </Formik>\n      </>\n    );\n  }\n}\n\n// import React from 'react';\n// import { Formik, Field, ErrorMessage, Form as FForm } from 'formik';\n// import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\n// const Basic = () => (\n//   <div>\n//     <h1>Any place in your app!</h1>\n//     <Formik\n//       initialValues={{ email: '', password: '' }}\n//       validate={values => {\n//         let errors = {};\n//         if (!values.email) {\n//           errors.email = 'Required';\n//         } else if (\n//           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n//         ) {\n//           errors.email = 'Invalid email address';\n//         }\n//         if (!values.password) {\n//           errors.password = 'Required';\n//         }\n//         return errors;\n//       }}\n//       onSubmit={(values, { setSubmitting }) => {\n//         setTimeout(() => {\n//           alert(JSON.stringify(values, null, 2));\n//           setSubmitting(false);\n//         }, 400);\n//       }}\n//     >\n//       {({ isSubmitting }) => (\n//         <FForm>\n//           <FormGroup>\n//             <Label for=\"email\">Email</Label>\n//             <Field type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n//             <ErrorMessage name=\"email\" component=\"div\" />\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"email\">Password</Label>\n//             <Field type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n//             <ErrorMessage name=\"password\" component=\"div\" />\n//           </FormGroup>\n//           <button type=\"submit\" disabled={isSubmitting}>\n//             Submit\n//           </button>\n//         </FForm>\n//       )}\n//     </Formik>\n//   </div>\n// );\n\n// export default Basic;\n"]},"metadata":{},"sourceType":"module"}