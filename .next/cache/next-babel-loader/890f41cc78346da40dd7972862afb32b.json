{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vlad/apps/github-app/src/LoginForm/index.js\";\nimport React from 'react';\nimport { Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"with a placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"examplePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Example;\n}(React.Component); // import React from 'react';\n// import { Formik, Field, ErrorMessage, Form as FForm } from 'formik';\n// import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n// const Basic = () => (\n//   <div>\n//     <h1>Any place in your app!</h1>\n//     <Formik\n//       initialValues={{ email: '', password: '' }}\n//       validate={values => {\n//         let errors = {};\n//         if (!values.email) {\n//           errors.email = 'Required';\n//         } else if (\n//           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n//         ) {\n//           errors.email = 'Invalid email address';\n//         }\n//         if (!values.password) {\n//           errors.password = 'Required';\n//         }\n//         return errors;\n//       }}\n//       onSubmit={(values, { setSubmitting }) => {\n//         setTimeout(() => {\n//           alert(JSON.stringify(values, null, 2));\n//           setSubmitting(false);\n//         }, 400);\n//       }}\n//     >\n//       {({ isSubmitting }) => (\n//         <FForm>\n//           <FormGroup>\n//             <Label for=\"email\">Email</Label>\n//             <Field type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n//             <ErrorMessage name=\"email\" component=\"div\" />\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"email\">Password</Label>\n//             <Field type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n//             <ErrorMessage name=\"password\" component=\"div\" />\n//           </FormGroup>\n//           <button type=\"submit\" disabled={isSubmitting}>\n//             Submit\n//           </button>\n//         </FForm>\n//       )}\n//     </Formik>\n//   </div>\n// );\n// export default Basic;\n\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/vlad/apps/github-app/src/LoginForm/index.js"],"names":["React","Badge","Button","Form","FormGroup","Label","Input","FormText","Example","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,QAAvD,QAAuE,YAAvE;;IAEqBC,O;;;;;;;;;;;;;6BACV;AACP,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,eAAI,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,EAAE,EAAC,cAApC;AAAmD,QAAA,WAAW,EAAC,oBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,eAAI,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,EAAE,EAAC,iBAA1C;AAA4D,QAAA,WAAW,EAAC,sBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAFF,CADF;AAgBD;;;;EAlBkCR,KAAK,CAACS,S,GAqB3C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;SAxEqBD,O","sourcesContent":["import React from 'react';\nimport { Badge, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>Login</h2>\n        <Form>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n          </FormGroup>\n          <Button>Submit</Button>\n        </Form>\n      </>\n    );\n  }\n}\n\n// import React from 'react';\n// import { Formik, Field, ErrorMessage, Form as FForm } from 'formik';\n// import { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\n// const Basic = () => (\n//   <div>\n//     <h1>Any place in your app!</h1>\n//     <Formik\n//       initialValues={{ email: '', password: '' }}\n//       validate={values => {\n//         let errors = {};\n//         if (!values.email) {\n//           errors.email = 'Required';\n//         } else if (\n//           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n//         ) {\n//           errors.email = 'Invalid email address';\n//         }\n//         if (!values.password) {\n//           errors.password = 'Required';\n//         }\n//         return errors;\n//       }}\n//       onSubmit={(values, { setSubmitting }) => {\n//         setTimeout(() => {\n//           alert(JSON.stringify(values, null, 2));\n//           setSubmitting(false);\n//         }, 400);\n//       }}\n//     >\n//       {({ isSubmitting }) => (\n//         <FForm>\n//           <FormGroup>\n//             <Label for=\"email\">Email</Label>\n//             <Field type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n//             <ErrorMessage name=\"email\" component=\"div\" />\n//           </FormGroup>\n//           <FormGroup>\n//             <Label for=\"email\">Password</Label>\n//             <Field type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n//             <ErrorMessage name=\"password\" component=\"div\" />\n//           </FormGroup>\n//           <button type=\"submit\" disabled={isSubmitting}>\n//             Submit\n//           </button>\n//         </FForm>\n//       )}\n//     </Formik>\n//   </div>\n// );\n\n// export default Basic;\n"]},"metadata":{},"sourceType":"module"}